var sql = 
{
    "select": "The SELECT statement is used to select data from a database. The data returned is stored in a result table, called the result-set.",
    "select distinct": "The SELECT DISTINCT statement is used to return only distinct values. If multiple columns are selected, then unique rows are returned(instead of unique values in each column). Inside a table, a column often contains many duplicate values; and sometimes you only want to list the distinct values.",
    "where": "The WHERE clause is used to filter records. The WHERE clause is used to extract only those records that fulfill a specified condition.",
    "from": "The FROM clause is used to specify the table on which an operation is done.",
    "insert into": "The INSERT INTO statement is used to insert new records in a table. If you are adding values for all the columns of the table, you do not need to specify the column names of the table in the SQL query.",
    "values": "The VALUES clause is used to specify the column values of the row to be inserted into the table.",
    "update": "The UPDATE statement is used to modify the existing records in a table. The WHERE clause specifies which record(s) that should be updated. If the WHERE clause is omitted, all records in the table will be updated!",
    "set": "The SET clause is used to assign the values to columns in UPDATE statement.",
    "delete": "The DELETE statement is used to delete existing records in a table. The WHERE clause specifies which record(s) should be deleted. If the WHERE clause is omitted, all records in the table will be deleted!",
    "order by": "The ORDER BY keyword is used to sort the result-set in ascending or descending order. The ORDER BY keyword sorts the records in ascending order by default. To sort the records in descending order, use the DESC keyword. If ORDER BY is used on multiple columns, the rows are sorted based on first column, and remaining columns are used as tie-breakers.",
    "is null": "The IS NULL operator is used to test for empty values (NULL values).",
    "is not null": "The IS NOT NULL operator is used to test for non-empty values (NOT NULL values).",
    "limit": "The LIMIT clause is used to select a limited number of records. It is used along with the SELECT statement.",
    "and": "The AND operator is used to filter records based on more than one condition. The AND operator displays a record if all the conditions separated by AND are TRUE. The WHERE clause can be combined with AND, OR, and NOT operators.",
    "or": "The OR operator is used to filter records based on more than one condition. The OR operator displays a record if any of the conditions separated by OR is TRUE. The WHERE clause can be combined with AND, OR, and NOT operators.",
    "not": "The NOT operator displays a record if the condition(s) is NOT TRUE. The WHERE clause can be combined with AND, OR, and NOT operators.",
    "min": "The MIN() function returns the smallest value of the selected column.",
    "max": "The MAX() function returns the largest value of the selected column.",
    "count": "The COUNT() function returns the number of rows that matches a specified criterion.",
    "avg": "The AVG() function returns the average value of a numeric column.",
    "sum": "The SUM() function returns the total sum of a numeric column.",
    "like": "The LIKE operator is used in a WHERE clause to search for a specified pattern in a column. The search pattern is specified using SQL Wildcards.",
    "in": "The IN operator allows you to specify multiple values in a WHERE clause. The IN operator is a shorthand for multiple OR conditions.",
    "not in": "The NOT IN operator allows you to exclude multiple values in a WHERE clause. The NOT IN operator is a shorthand for NOT of multiple OR conditions.",
    "between": "The BETWEEN operator selects values within a given range. The values can be numbers, text, or dates. The BETWEEN operator is inclusive: begin and end values are included.",
    "not between": "The NOT BETWEEN operator selects values that are not within a given range. The values can be numbers, text, or dates.",
    "as": "The AS command is used to rename a column or table with an alias. An alias only exists for the duration of the query.",
    "inner join": "The INNER JOIN keyword selects records that have matching values in both tables. The INNER JOIN keyword selects all rows from both tables as long as there is a match between the columns.",
    "left join": "The LEFT JOIN keyword returns all records from the left table (table1), and the matched records from the right table (table2). The result is NULL from the right side, if there is no match.",
    "right join": "The RIGHT JOIN keyword returns all records from the right table (table2), and the matched records from the left table (table1). The result is NULL from the left side, when there is no match.",
    "full join": "The FULL OUTER JOIN/FULL JOIN keyword returns all records when there is a match in left (table1) or right (table2) table records. The joined table will contain all records from both the tables and fill in NULLs for missing matches on either side.",
    "full outer join": "The FULL OUTER JOIN/FULL JOIN keyword returns all records when there is a match in left (table1) or right (table2) table records. The joined table will contain all records from both the tables and fill in NULLs for missing matches on either side.",
    "cross join": "The CROSS JOIN is used to combine each row of the first table with each row of the second table. It is also known as the Cartesian join since it returns the Cartesian product of the sets of rows from the joined tables.",
    "on": "The ON keyword is used to specify the join condition while joining two or more tables.",
    "union": "The UNION operator is used to combine the result-set of two or more SELECT statements. Each SELECT statement within UNION must have the same number of columns, the columns must have similar data types, the columns must be in the same order.",
    "union all": "The UNION ALL operator is similar to UNION, but it also allows duplicate values. The UNION operator selects only distinct values by default.",
    "insert into select": "The INSERT INTO SELECT statement copies data from one table and inserts it into another table. INSERT INTO SELECT requires that data types in source and target tables match. The existing records in the target table are unaffected",
    "case": "The CASE statement goes through conditions and returns a value when the first condition is met (like an IF-THEN-ELSE statement). So, once a condition is true, it will stop reading and return the result. If no conditions are true, it returns the value in the ELSE clause. If there is no ELSE part and no conditions are true, it returns NULL.",
    // "when", "then", "else", "end"
    
}